{"version":3,"sources":["chessboard-1.0.0.js"],"names":["$","window","COLUMNS","split","DEFAULT_DRAG_THROTTLE_RATE","ELLIPSIS","MINIMUM_JQUERY_VERSION","RUN_ASSERTS","START_FEN","START_POSITION","fenToObj","DEFAULT_APPEAR_SPEED","DEFAULT_MOVE_SPEED","DEFAULT_SNAPBACK_SPEED","DEFAULT_SNAP_SPEED","DEFAULT_TRASH_SPEED","CSS","throttle","f","interval","scope","timeout","shouldFire","args","handleTimeout","fire","setTimeout","apply","_args","arguments","uuid","replace","c","r","Math","random","toString","deepCopy","thing","JSON","parse","stringify","parseSemVer","version","tmp","major","parseInt","minor","patch","validSemanticVersion","minimum","versionNum","minimumNum","interpolateTemplate","str","obj","key","hasOwnProperty","keyTemplateStr","value","indexOf","console","assert","a","p","b","isString","s","isFunction","isInteger","n","isFinite","floor","validAnimationSpeed","speed","validThrottleRate","rate","validMove","move","squares","length","validSquare","square","search","validPieceCode","code","validFen","fen","expandFenEmptySquares","chunks","i","validPositionObject","pos","isPlainObject","e2","d2","y2","isTouchDevice","document","documentElement","validJQueryVersion","fn","jquery","fenToPieceCode","piece","toLowerCase","toUpperCase","pieceCodeToFen","pieceCodeLetters","rows","position","currentRow","row","colIdx","j","numEmptySquares","objToFen","squeezeFenEmptySquares","a2","squareDistance","squareA","squareB","squareAArray","squareAx","squareAy","squareBArray","squareBx","squareBy","xDelta","abs","yDelta","findClosestPiece","closestSquares","createRadius","push","distance","sort","surroundingSquares","calculatePositionFromMoves","moves","newPosition","buildContainerHTML","hasSparePieces","html","expandConfigArgumentShorthand","config","expandConfig","orientation","showNotation","draggable","dropOffBoard","sparePieces","pieceTheme","appearSpeed","moveSpeed","snapbackSpeed","snapSpeed","trashSpeed","dragThrottleRate","checkJQuery","errorMsg","alert","checkContainerArg","containerElOrString","errorMsg1","charAt","$container","errorMsg2","constructor","$board","$draggedPiece","$sparePiecesTop","$sparePiecesBottom","widget","boardBorderSize","currentOrientation","currentPosition","draggedPiece","draggedPieceLocation","draggedPieceSource","isDragging","sparePiecesElsIds","squareElsIds","squareElsOffsets","squareSize","error","msg","showErrors","errorText","log","setInitialState","calculateSquareSize","containerWidth","width","boardWidth","createElIds","pieces","whitePiece","blackPiece","buildBoardHTML","alpha","reverse","squareColor","buildPieceImgSrc","buildPieceHTML","hidden","id","buildSparePiecesHTML","color","animateSquareToSquare","src","dest","completeFn","$srcSquare","srcSquarePosition","offset","$destSquare","destSquarePosition","animatedPieceId","append","$animatedPiece","css","display","top","left","find","remove","onFinishAnimation1","opts","duration","complete","animate","animateSparePieceToSquare","srcOffset","destOffset","pieceId","onFinishAnimation2","doAnimations","animations","oldPos","newPos","numFinished","onFinishAnimation3","drawPositionInstant","onMoveEnd","animation","type","fadeOut","fadeIn","source","destination","calculateAnimations","pos1","pos2","squaresMovedTo","closestPiece","drawBoard","setCurrentPosition","oldFen","newFen","onChange","isXYOnSquare","x","y","captureSquareOffsets","removeSquareHighlights","removeClass","highlight1","highlight2","snapbackDraggedPiece","trashDraggedPiece","onSnapbackEnd","sourceSquarePosition","dropDraggedPieceOnSquare","targetSquarePosition","onAnimationComplete","onSnapEnd","beginDraggingPiece","onDragStart","attr","addClass","updateDraggedPiece","location","onDragMove","stopDraggedPiece","action","onDrop","oldPosition","result","clear","useAnimation","destroy","unbind","flip","arg","resize","height","start","stopDefault","evt","preventDefault","mousedownSquare","pageX","pageY","touchstartSquare","e","originalEvent","changedTouches","mousedownSparePiece","touchstartSparePiece","mousemoveWindow","throttledMousemoveWindow","touchmoveWindow","throttledTouchmoveWindow","mouseupWindow","touchendWindow","mouseenterSquare","onMouseoverSquare","currentTarget","mouseleaveSquare","onMouseoutSquare","addEvents","on","$window","initDOM","board","sparePiecesTop","sparePiecesBottom","draggedPieceId"],"mappings":"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","file":"chessboard-1.0.0.c7f33d3d.js","sourceRoot":"..","sourcesContent":["// chessboard.js v1.0.0\n// https://github.com/oakmac/chessboardjs/\n//\n// Copyright (c) 2019, Chris Oakman\n// Released under the MIT license\n// https://github.com/oakmac/chessboardjs/blob/master/LICENSE.md\n\r\n// start anonymous scope\r\n;(function () {\r\n  'use strict'\n\n  var $ = window['jQuery']\n\n  // ---------------------------------------------------------------------------\n  // Constants\n  // ---------------------------------------------------------------------------\n\n  var COLUMNS = 'abcdefgh'.split('')\n  var DEFAULT_DRAG_THROTTLE_RATE = 20\n  var ELLIPSIS = '…'\n  var MINIMUM_JQUERY_VERSION = '1.8.3'\n  var RUN_ASSERTS = false\n  var START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR'\n  var START_POSITION = fenToObj(START_FEN)\n\n  // default animation speeds\n  var DEFAULT_APPEAR_SPEED = 200\n  var DEFAULT_MOVE_SPEED = 200\n  var DEFAULT_SNAPBACK_SPEED = 60\n  var DEFAULT_SNAP_SPEED = 30\n  var DEFAULT_TRASH_SPEED = 100\n\n  // use unique class names to prevent clashing with anything else on the page\n  // and simplify selectors\n  // NOTE: these should never change\n  var CSS = {}\n  CSS['alpha'] = 'alpha-d2270'\n  CSS['black'] = 'black-3c85d'\n  CSS['board'] = 'board-b72b1'\n  CSS['chessboard'] = 'chessboard-63f37'\n  CSS['clearfix'] = 'clearfix-7da63'\n  CSS['highlight1'] = 'highlight1-32417'\n  CSS['highlight2'] = 'highlight2-9c5d2'\n  CSS['notation'] = 'notation-322f9'\n  CSS['numeric'] = 'numeric-fc462'\n  CSS['piece'] = 'piece-417db'\n  CSS['row'] = 'row-5277c'\n  CSS['sparePieces'] = 'spare-pieces-7492f'\n  CSS['sparePiecesBottom'] = 'spare-pieces-bottom-ae20f'\n  CSS['sparePiecesTop'] = 'spare-pieces-top-4028b'\n  CSS['square'] = 'square-55d63'\n  CSS['white'] = 'white-1e1d7'\n\n  // ---------------------------------------------------------------------------\n  // Misc Util Functions\n  // ---------------------------------------------------------------------------\n\n  function throttle (f, interval, scope) {\n    var timeout = 0\n    var shouldFire = false\n    var args = []\n\n    var handleTimeout = function () {\n      timeout = 0\n      if (shouldFire) {\n        shouldFire = false\n        fire()\n      }\n    }\n\n    var fire = function () {\n      timeout = window.setTimeout(handleTimeout, interval)\n      f.apply(scope, args)\n    }\n\n    return function (_args) {\n      args = arguments\n      if (!timeout) {\n        fire()\n      } else {\n        shouldFire = true\n      }\n    }\n  }\n\n  // function debounce (f, interval, scope) {\n  //   var timeout = 0\n  //   return function (_args) {\n  //     window.clearTimeout(timeout)\n  //     var args = arguments\n  //     timeout = window.setTimeout(function () {\n  //       f.apply(scope, args)\n  //     }, interval)\n  //   }\n  // }\n\n  function uuid () {\n    return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function (c) {\n      var r = (Math.random() * 16) | 0\n      return r.toString(16)\n    })\n  }\n\n  function deepCopy (thing) {\n    return JSON.parse(JSON.stringify(thing))\n  }\n\n  function parseSemVer (version) {\n    var tmp = version.split('.')\n    return {\n      major: parseInt(tmp[0], 10),\n      minor: parseInt(tmp[1], 10),\n      patch: parseInt(tmp[2], 10)\n    }\n  }\n\n  // returns true if version is >= minimum\n  function validSemanticVersion (version, minimum) {\n    version = parseSemVer(version)\n    minimum = parseSemVer(minimum)\n\n    var versionNum = (version.major * 100000 * 100000) +\n                     (version.minor * 100000) +\n                     version.patch\n    var minimumNum = (minimum.major * 100000 * 100000) +\n                     (minimum.minor * 100000) +\n                     minimum.patch\n\n    return versionNum >= minimumNum\n  }\n\n  function interpolateTemplate (str, obj) {\n    for (var key in obj) {\n      if (!obj.hasOwnProperty(key)) continue\n      var keyTemplateStr = '{' + key + '}'\n      var value = obj[key]\n      while (str.indexOf(keyTemplateStr) !== -1) {\n        str = str.replace(keyTemplateStr, value)\n      }\n    }\n    return str\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(interpolateTemplate('abc', {a: 'x'}) === 'abc')\n    console.assert(interpolateTemplate('{a}bc', {}) === '{a}bc')\n    console.assert(interpolateTemplate('{a}bc', {p: 'q'}) === '{a}bc')\n    console.assert(interpolateTemplate('{a}bc', {a: 'x'}) === 'xbc')\n    console.assert(interpolateTemplate('{a}bc{a}bc', {a: 'x'}) === 'xbcxbc')\n    console.assert(interpolateTemplate('{a}{a}{b}', {a: 'x', b: 'y'}) === 'xxy')\n  }\n\n  // ---------------------------------------------------------------------------\n  // Predicates\n  // ---------------------------------------------------------------------------\n\n  function isString (s) {\n    return typeof s === 'string'\n  }\n\n  function isFunction (f) {\n    return typeof f === 'function'\n  }\n\n  function isInteger (n) {\n    return typeof n === 'number' &&\n           isFinite(n) &&\n           Math.floor(n) === n\n  }\n\n  function validAnimationSpeed (speed) {\n    if (speed === 'fast' || speed === 'slow') return true\n    if (!isInteger(speed)) return false\n    return speed >= 0\n  }\n\n  function validThrottleRate (rate) {\n    return isInteger(rate) &&\n           rate >= 1\n  }\n\n  function validMove (move) {\r\n    // move should be a string\r\n    if (!isString(move)) return false\n\r\n    // move should be in the form of \"e2-e4\", \"f6-d5\"\r\n    var squares = move.split('-')\n    if (squares.length !== 2) return false\n\r\n    return validSquare(squares[0]) && validSquare(squares[1])\n  }\r\n\r\n  function validSquare (square) {\n    return isString(square) && square.search(/^[a-h][1-8]$/) !== -1\n  }\r\n\n  if (RUN_ASSERTS) {\n    console.assert(validSquare('a1'))\n    console.assert(validSquare('e2'))\n    console.assert(!validSquare('D2'))\n    console.assert(!validSquare('g9'))\n    console.assert(!validSquare('a'))\n    console.assert(!validSquare(true))\n    console.assert(!validSquare(null))\n    console.assert(!validSquare({}))\n  }\n\n  function validPieceCode (code) {\n    return isString(code) && code.search(/^[bw][KQRNBP]$/) !== -1\n  }\r\n\n  if (RUN_ASSERTS) {\n    console.assert(validPieceCode('bP'))\n    console.assert(validPieceCode('bK'))\n    console.assert(validPieceCode('wK'))\n    console.assert(validPieceCode('wR'))\n    console.assert(!validPieceCode('WR'))\n    console.assert(!validPieceCode('Wr'))\n    console.assert(!validPieceCode('a'))\n    console.assert(!validPieceCode(true))\n    console.assert(!validPieceCode(null))\n    console.assert(!validPieceCode({}))\n  }\n\n  function validFen (fen) {\n    if (!isString(fen)) return false\n\r\n    // cut off any move, castling, etc info from the end\r\n    // we're only interested in position information\r\n    fen = fen.replace(/ .+$/, '')\r\n\n    // expand the empty square numbers to just 1s\n    fen = expandFenEmptySquares(fen)\n\n    // FEN should be 8 sections separated by slashes\r\n    var chunks = fen.split('/')\r\n    if (chunks.length !== 8) return false\n\n    // check each section\n    for (var i = 0; i < 8; i++) {\n      if (chunks[i].length !== 8 ||\n          chunks[i].search(/[^kqrnbpKQRNBP1]/) !== -1) {\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n\n  if (RUN_ASSERTS) {\n    console.assert(validFen(START_FEN))\n    console.assert(validFen('8/8/8/8/8/8/8/8'))\n    console.assert(validFen('r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R'))\n    console.assert(validFen('3r3r/1p4pp/2nb1k2/pP3p2/8/PB2PN2/p4PPP/R4RK1 b - - 0 1'))\n    console.assert(!validFen('3r3z/1p4pp/2nb1k2/pP3p2/8/PB2PN2/p4PPP/R4RK1 b - - 0 1'))\n    console.assert(!validFen('anbqkbnr/8/8/8/8/8/PPPPPPPP/8'))\n    console.assert(!validFen('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/'))\n    console.assert(!validFen('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBN'))\n    console.assert(!validFen('888888/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR'))\n    console.assert(!validFen('888888/pppppppp/74/8/8/8/PPPPPPPP/RNBQKBNR'))\n    console.assert(!validFen({}))\n  }\n\n  function validPositionObject (pos) {\n    if (!$.isPlainObject(pos)) return false\n\r\n    for (var i in pos) {\r\n      if (!pos.hasOwnProperty(i)) continue\r\n\r\n      if (!validSquare(i) || !validPieceCode(pos[i])) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n\n  if (RUN_ASSERTS) {\n    console.assert(validPositionObject(START_POSITION))\n    console.assert(validPositionObject({}))\n    console.assert(validPositionObject({e2: 'wP'}))\n    console.assert(validPositionObject({e2: 'wP', d2: 'wP'}))\n    console.assert(!validPositionObject({e2: 'BP'}))\n    console.assert(!validPositionObject({y2: 'wP'}))\n    console.assert(!validPositionObject(null))\n    console.assert(!validPositionObject('start'))\n    console.assert(!validPositionObject(START_FEN))\n  }\n\n  function isTouchDevice () {\n    return 'ontouchstart' in document.documentElement\n  }\n\n  function validJQueryVersion () {\n    return typeof window.$ &&\n           $.fn &&\n           $.fn.jquery &&\n           validSemanticVersion($.fn.jquery, MINIMUM_JQUERY_VERSION)\n  }\n\n  // ---------------------------------------------------------------------------\n  // Chess Util Functions\n  // ---------------------------------------------------------------------------\n\n  // convert FEN piece code to bP, wK, etc\n  function fenToPieceCode (piece) {\n    // black piece\n    if (piece.toLowerCase() === piece) {\n      return 'b' + piece.toUpperCase()\n    }\n\n    // white piece\n    return 'w' + piece.toUpperCase()\n  }\n\n  // convert bP, wK, etc code to FEN structure\n  function pieceCodeToFen (piece) {\n    var pieceCodeLetters = piece.split('')\n\n    // white piece\n    if (pieceCodeLetters[0] === 'w') {\n      return pieceCodeLetters[1].toUpperCase()\n    }\n\n    // black piece\n    return pieceCodeLetters[1].toLowerCase()\n  }\n\n  // convert FEN string to position object\r\n  // returns false if the FEN string is invalid\r\n  function fenToObj (fen) {\r\n    if (!validFen(fen)) return false\n\r\n    // cut off any move, castling, etc info from the end\r\n    // we're only interested in position information\r\n    fen = fen.replace(/ .+$/, '')\r\n\r\n    var rows = fen.split('/')\r\n    var position = {}\r\n\r\n    var currentRow = 8\r\n    for (var i = 0; i < 8; i++) {\r\n      var row = rows[i].split('')\r\n      var colIdx = 0\n\r\n      // loop through each character in the FEN section\r\n      for (var j = 0; j < row.length; j++) {\r\n        // number / empty squares\r\n        if (row[j].search(/[1-8]/) !== -1) {\r\n          var numEmptySquares = parseInt(row[j], 10)\n          colIdx = colIdx + numEmptySquares\n        } else {\n          // piece\r\n          var square = COLUMNS[colIdx] + currentRow\n          position[square] = fenToPieceCode(row[j])\r\n          colIdx = colIdx + 1\n        }\r\n      }\r\n\n      currentRow = currentRow - 1\n    }\r\n\r\n    return position\r\n  }\n\n  // position object to FEN string\r\n  // returns false if the obj is not a valid position object\r\n  function objToFen (obj) {\r\n    if (!validPositionObject(obj)) return false\n\r\n    var fen = ''\r\n\r\n    var currentRow = 8\r\n    for (var i = 0; i < 8; i++) {\r\n      for (var j = 0; j < 8; j++) {\r\n        var square = COLUMNS[j] + currentRow\r\n\r\n        // piece exists\r\n        if (obj.hasOwnProperty(square)) {\n          fen = fen + pieceCodeToFen(obj[square])\n        } else {\r\n          // empty space\r\n          fen = fen + '1'\n        }\r\n      }\r\n\r\n      if (i !== 7) {\n        fen = fen + '/'\n      }\n\r\n      currentRow = currentRow - 1\n    }\r\n\r\n    // squeeze the empty numbers together\n    fen = squeezeFenEmptySquares(fen)\n\n    return fen\r\n  }\r\n\n  if (RUN_ASSERTS) {\n    console.assert(objToFen(START_POSITION) === START_FEN)\n    console.assert(objToFen({}) === '8/8/8/8/8/8/8/8')\n    console.assert(objToFen({a2: 'wP', 'b2': 'bP'}) === '8/8/8/8/8/8/Pp6/8')\n  }\n\n  function squeezeFenEmptySquares (fen) {\n    return fen.replace(/11111111/g, '8')\n      .replace(/1111111/g, '7')\n      .replace(/111111/g, '6')\n      .replace(/11111/g, '5')\n      .replace(/1111/g, '4')\n      .replace(/111/g, '3')\n      .replace(/11/g, '2')\n  }\n\n  function expandFenEmptySquares (fen) {\n    return fen.replace(/8/g, '11111111')\n      .replace(/7/g, '1111111')\n      .replace(/6/g, '111111')\n      .replace(/5/g, '11111')\n      .replace(/4/g, '1111')\n      .replace(/3/g, '111')\n      .replace(/2/g, '11')\n  }\n\n  // returns the distance between two squares\n  function squareDistance (squareA, squareB) {\n    var squareAArray = squareA.split('')\n    var squareAx = COLUMNS.indexOf(squareAArray[0]) + 1\n    var squareAy = parseInt(squareAArray[1], 10)\n\n    var squareBArray = squareB.split('')\n    var squareBx = COLUMNS.indexOf(squareBArray[0]) + 1\n    var squareBy = parseInt(squareBArray[1], 10)\n\n    var xDelta = Math.abs(squareAx - squareBx)\n    var yDelta = Math.abs(squareAy - squareBy)\n\n    if (xDelta >= yDelta) return xDelta\n    return yDelta\n  }\n\n  // returns the square of the closest instance of piece\n  // returns false if no instance of piece is found in position\n  function findClosestPiece (position, piece, square) {\n    // create array of closest squares from square\n    var closestSquares = createRadius(square)\n\n    // search through the position in order of distance for the piece\n    for (var i = 0; i < closestSquares.length; i++) {\n      var s = closestSquares[i]\n\n      if (position.hasOwnProperty(s) && position[s] === piece) {\n        return s\n      }\n    }\n\n    return false\n  }\n\n  // returns an array of closest squares from square\n  function createRadius (square) {\n    var squares = []\n\n    // calculate distance of all squares\n    for (var i = 0; i < 8; i++) {\n      for (var j = 0; j < 8; j++) {\n        var s = COLUMNS[i] + (j + 1)\n\n        // skip the square we're starting from\n        if (square === s) continue\n\n        squares.push({\n          square: s,\n          distance: squareDistance(square, s)\n        })\n      }\n    }\n\n    // sort by distance\n    squares.sort(function (a, b) {\n      return a.distance - b.distance\n    })\n\n    // just return the square code\n    var surroundingSquares = []\n    for (i = 0; i < squares.length; i++) {\n      surroundingSquares.push(squares[i].square)\n    }\n\n    return surroundingSquares\n  }\n\n  // given a position and a set of moves, return a new position\n  // with the moves executed\n  function calculatePositionFromMoves (position, moves) {\n    var newPosition = deepCopy(position)\n\n    for (var i in moves) {\n      if (!moves.hasOwnProperty(i)) continue\n\n      // skip the move if the position doesn't have a piece on the source square\n      if (!newPosition.hasOwnProperty(i)) continue\n\n      var piece = newPosition[i]\n      delete newPosition[i]\n      newPosition[moves[i]] = piece\n    }\n\n    return newPosition\n  }\n\n  // TODO: add some asserts here for calculatePositionFromMoves\n\n  // ---------------------------------------------------------------------------\n  // HTML\n  // ---------------------------------------------------------------------------\n\n  function buildContainerHTML (hasSparePieces) {\n    var html = '<div class=\"{chessboard}\">'\n\n    if (hasSparePieces) {\n      html += '<div class=\"{sparePieces} {sparePiecesTop}\"></div>'\n    }\n\n    html += '<div class=\"{board}\"></div>'\n\n    if (hasSparePieces) {\n      html += '<div class=\"{sparePieces} {sparePiecesBottom}\"></div>'\n    }\n\n    html += '</div>'\n\n    return interpolateTemplate(html, CSS)\n  }\n\n  // ---------------------------------------------------------------------------\n  // Config\n  // ---------------------------------------------------------------------------\n\n  function expandConfigArgumentShorthand (config) {\n    if (config === 'start') {\n      config = {position: deepCopy(START_POSITION)}\n    } else if (validFen(config)) {\n      config = {position: fenToObj(config)}\n    } else if (validPositionObject(config)) {\n      config = {position: deepCopy(config)}\n    }\n\n    // config must be an object\n    if (!$.isPlainObject(config)) config = {}\n\n    return config\n  }\n\n  // validate config / set default options\n  function expandConfig (config) {\n    // default for orientation is white\n    if (config.orientation !== 'black') config.orientation = 'white'\n\n    // default for showNotation is true\n    if (config.showNotation !== false) config.showNotation = true\n\n    // default for draggable is false\n    if (config.draggable !== true) config.draggable = false\n\n    // default for dropOffBoard is 'snapback'\n    if (config.dropOffBoard !== 'trash') config.dropOffBoard = 'snapback'\n\n    // default for sparePieces is false\n    if (config.sparePieces !== true) config.sparePieces = false\n\n    // draggable must be true if sparePieces is enabled\n    if (config.sparePieces) config.draggable = true\n\n    // default piece theme is wikipedia\n    if (!config.hasOwnProperty('pieceTheme') ||\n        (!isString(config.pieceTheme) && !isFunction(config.pieceTheme))) {\n      config.pieceTheme = 'img/chesspieces/wikipedia/{piece}.png'\n    }\n\n    // animation speeds\n    if (!validAnimationSpeed(config.appearSpeed)) config.appearSpeed = DEFAULT_APPEAR_SPEED\n    if (!validAnimationSpeed(config.moveSpeed)) config.moveSpeed = DEFAULT_MOVE_SPEED\n    if (!validAnimationSpeed(config.snapbackSpeed)) config.snapbackSpeed = DEFAULT_SNAPBACK_SPEED\n    if (!validAnimationSpeed(config.snapSpeed)) config.snapSpeed = DEFAULT_SNAP_SPEED\n    if (!validAnimationSpeed(config.trashSpeed)) config.trashSpeed = DEFAULT_TRASH_SPEED\n\n    // throttle rate\n    if (!validThrottleRate(config.dragThrottleRate)) config.dragThrottleRate = DEFAULT_DRAG_THROTTLE_RATE\n\n    return config\n  }\n\n  // ---------------------------------------------------------------------------\n  // Dependencies\n  // ---------------------------------------------------------------------------\n\n  // check for a compatible version of jQuery\n  function checkJQuery () {\n    if (!validJQueryVersion()) {\n      var errorMsg = 'Chessboard Error 1005: Unable to find a valid version of jQuery. ' +\n        'Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or higher on the page' +\n        '\\n\\n' +\n        'Exiting' + ELLIPSIS\n      window.alert(errorMsg)\n      return false\n    }\n\n    return true\n  }\n\n  // return either boolean false or the $container element\n  function checkContainerArg (containerElOrString) {\n    if (containerElOrString === '') {\n      var errorMsg1 = 'Chessboard Error 1001: ' +\n        'The first argument to Chessboard() cannot be an empty string.' +\n        '\\n\\n' +\n        'Exiting' + ELLIPSIS\n      window.alert(errorMsg1)\n      return false\n    }\n\n    // convert containerEl to query selector if it is a string\n    if (isString(containerElOrString) &&\n        containerElOrString.charAt(0) !== '#') {\n      containerElOrString = '#' + containerElOrString\n    }\n\n    // containerEl must be something that becomes a jQuery collection of size 1\n    var $container = $(containerElOrString)\n    if ($container.length !== 1) {\n      var errorMsg2 = 'Chessboard Error 1003: ' +\n        'The first argument to Chessboard() must be the ID of a DOM node, ' +\n        'an ID query selector, or a single DOM node.' +\n        '\\n\\n' +\n        'Exiting' + ELLIPSIS\n      window.alert(errorMsg2)\n      return false\n    }\n\n    return $container\n  }\n\n  // ---------------------------------------------------------------------------\n  // Constructor\n  // ---------------------------------------------------------------------------\n\n  function constructor (containerElOrString, config) {\n    // first things first: check basic dependencies\n    if (!checkJQuery()) return null\n    var $container = checkContainerArg(containerElOrString)\n    if (!$container) return null\n\n    // ensure the config object is what we expect\n    config = expandConfigArgumentShorthand(config)\n    config = expandConfig(config)\n\n    // DOM elements\n    var $board = null\n    var $draggedPiece = null\n    var $sparePiecesTop = null\n    var $sparePiecesBottom = null\n\n    // constructor return object\n    var widget = {}\r\n\r\n    // -------------------------------------------------------------------------\n    // Stateful\n    // -------------------------------------------------------------------------\n\n    var boardBorderSize = 2\n    var currentOrientation = 'white'\n    var currentPosition = {}\n    var draggedPiece = null\n    var draggedPieceLocation = null\n    var draggedPieceSource = null\n    var isDragging = false\n    var sparePiecesElsIds = {}\n    var squareElsIds = {}\n    var squareElsOffsets = {}\n    var squareSize = 16\n\n    // -------------------------------------------------------------------------\n    // Validation / Errors\n    // -------------------------------------------------------------------------\n\r\n    function error (code, msg, obj) {\r\n      // do nothing if showErrors is not set\r\n      if (\r\n        config.hasOwnProperty('showErrors') !== true ||\n          config.showErrors === false\n      ) {\r\n        return\r\n      }\r\n\r\n      var errorText = 'Chessboard Error ' + code + ': ' + msg\n\r\n      // print to console\r\n      if (\r\n        config.showErrors === 'console' &&\n          typeof console === 'object' &&\r\n          typeof console.log === 'function'\r\n      ) {\r\n        console.log(errorText)\r\n        if (arguments.length >= 2) {\r\n          console.log(obj)\r\n        }\r\n        return\r\n      }\r\n\r\n      // alert errors\r\n      if (config.showErrors === 'alert') {\n        if (obj) {\r\n          errorText += '\\n\\n' + JSON.stringify(obj)\r\n        }\r\n        window.alert(errorText)\r\n        return\r\n      }\r\n\r\n      // custom function\n      if (isFunction(config.showErrors)) {\n        config.showErrors(code, msg, obj)\n      }\r\n    }\n\n    function setInitialState () {\n      currentOrientation = config.orientation\n\n      // make sure position is valid\n      if (config.hasOwnProperty('position')) {\n        if (config.position === 'start') {\n          currentPosition = deepCopy(START_POSITION)\n        } else if (validFen(config.position)) {\n          currentPosition = fenToObj(config.position)\n        } else if (validPositionObject(config.position)) {\n          currentPosition = deepCopy(config.position)\n        } else {\n          error(\n            7263,\n            'Invalid value passed to config.position.',\n            config.position\n          )\n        }\n      }\n    }\n\n    // -------------------------------------------------------------------------\n    // DOM Misc\n    // -------------------------------------------------------------------------\n\r\n    // calculates square size based on the width of the container\n    // got a little CSS black magic here, so let me explain:\n    // get the width of the container element (could be anything), reduce by 1 for\n    // fudge factor, and then keep reducing until we find an exact mod 8 for\n    // our square size\n    function calculateSquareSize () {\r\n      var containerWidth = parseInt($container.width(), 10)\n\r\n      // defensive, prevent infinite loop\n      if (!containerWidth || containerWidth <= 0) {\n        return 0\r\n      }\r\n\r\n      // pad one pixel\n      var boardWidth = containerWidth - 1\r\n\r\n      while (boardWidth % 8 !== 0 && boardWidth > 0) {\n        boardWidth = boardWidth - 1\n      }\r\n\r\n      return boardWidth / 8\r\n    }\r\n\r\n    // create random IDs for elements\n    function createElIds () {\n      // squares on the board\n      for (var i = 0; i < COLUMNS.length; i++) {\n        for (var j = 1; j <= 8; j++) {\n          var square = COLUMNS[i] + j\r\n          squareElsIds[square] = square + '-' + uuid()\n        }\r\n      }\r\n\r\n      // spare pieces\n      var pieces = 'KQRNBP'.split('')\n      for (i = 0; i < pieces.length; i++) {\n        var whitePiece = 'w' + pieces[i]\r\n        var blackPiece = 'b' + pieces[i]\r\n        sparePiecesElsIds[whitePiece] = whitePiece + '-' + uuid()\n        sparePiecesElsIds[blackPiece] = blackPiece + '-' + uuid()\n      }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\n    // Markup Building\n    // -------------------------------------------------------------------------\n\n    function buildBoardHTML (orientation) {\n      if (orientation !== 'black') {\n        orientation = 'white'\n      }\n\n      var html = ''\n\n      // algebraic notation / orientation\n      var alpha = deepCopy(COLUMNS)\n      var row = 8\n      if (orientation === 'black') {\n        alpha.reverse()\n        row = 1\n      }\n\n      var squareColor = 'white'\n      for (var i = 0; i < 8; i++) {\n        html += '<div class=\"{row}\">'\n        for (var j = 0; j < 8; j++) {\n          var square = alpha[j] + row\n\n          html += '<div class=\"{square} ' + CSS[squareColor] + ' ' +\n            'square-' + square + '\" ' +\n            'style=\"width:' + squareSize + 'px;height:' + squareSize + 'px;\" ' +\n            'id=\"' + squareElsIds[square] + '\" ' +\n            'data-square=\"' + square + '\">'\n\n          if (config.showNotation) {\n            // alpha notation\n            if ((orientation === 'white' && row === 1) ||\n                (orientation === 'black' && row === 8)) {\n              html += '<div class=\"{notation} {alpha}\">' + alpha[j] + '</div>'\n            }\n\n            // numeric notation\n            if (j === 0) {\n              html += '<div class=\"{notation} {numeric}\">' + row + '</div>'\n            }\n          }\n\n          html += '</div>' // end .square\n\n          squareColor = (squareColor === 'white') ? 'black' : 'white'\n        }\n        html += '<div class=\"{clearfix}\"></div></div>'\n\n        squareColor = (squareColor === 'white') ? 'black' : 'white'\n\n        if (orientation === 'white') {\n          row = row - 1\n        } else {\n          row = row + 1\n        }\n      }\n\n      return interpolateTemplate(html, CSS)\n    }\n\r\n    function buildPieceImgSrc (piece) {\r\n      if (isFunction(config.pieceTheme)) {\n        return config.pieceTheme(piece)\n      }\r\n\r\n      if (isString(config.pieceTheme)) {\n        return interpolateTemplate(config.pieceTheme, {piece: piece})\n      }\r\n\r\n      // NOTE: this should never happen\n      error(8272, 'Unable to build image source for config.pieceTheme.')\n      return ''\r\n    }\r\n\r\n    function buildPieceHTML (piece, hidden, id) {\n      var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" '\r\n      if (isString(id) && id !== '') {\n        html += 'id=\"' + id + '\" '\r\n      }\r\n      html += 'alt=\"\" ' +\n        'class=\"{piece}\" ' +\n        'data-piece=\"' + piece + '\" ' +\n        'style=\"width:' + squareSize + 'px;' + 'height:' + squareSize + 'px;'\n\n      if (hidden) {\n        html += 'display:none;'\r\n      }\n\n      html += '\" />'\r\n\r\n      return interpolateTemplate(html, CSS)\n    }\r\n\r\n    function buildSparePiecesHTML (color) {\n      var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP']\r\n      if (color === 'black') {\r\n        pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP']\r\n      }\r\n\r\n      var html = ''\r\n      for (var i = 0; i < pieces.length; i++) {\r\n        html += buildPieceHTML(pieces[i], false, sparePiecesElsIds[pieces[i]])\n      }\r\n\r\n      return html\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\n    // Animations\n    // -------------------------------------------------------------------------\n\r\n    function animateSquareToSquare (src, dest, piece, completeFn) {\r\n      // get information about the source and destination squares\n      var $srcSquare = $('#' + squareElsIds[src])\n      var srcSquarePosition = $srcSquare.offset()\n      var $destSquare = $('#' + squareElsIds[dest])\n      var destSquarePosition = $destSquare.offset()\n\r\n      // create the animated piece and absolutely position it\n      // over the source square\n      var animatedPieceId = uuid()\r\n      $('body').append(buildPieceHTML(piece, true, animatedPieceId))\n      var $animatedPiece = $('#' + animatedPieceId)\n      $animatedPiece.css({\n        display: '',\r\n        position: 'absolute',\r\n        top: srcSquarePosition.top,\r\n        left: srcSquarePosition.left\r\n      })\r\n\r\n      // remove original piece from source square\n      $srcSquare.find('.' + CSS.piece).remove()\n\n      function onFinishAnimation1 () {\n        // add the \"real\" piece to the destination square\n        $destSquare.append(buildPieceHTML(piece))\n\r\n        // remove the animated piece\n        $animatedPiece.remove()\n\r\n        // run complete function\n        if (isFunction(completeFn)) {\n          completeFn()\r\n        }\r\n      }\r\n\r\n      // animate the piece to the destination square\n      var opts = {\r\n        duration: config.moveSpeed,\n        complete: onFinishAnimation1\n      }\r\n      $animatedPiece.animate(destSquarePosition, opts)\n    }\r\n\r\n    function animateSparePieceToSquare (piece, dest, completeFn) {\r\n      var srcOffset = $('#' + sparePiecesElsIds[piece]).offset()\n      var $destSquare = $('#' + squareElsIds[dest])\n      var destOffset = $destSquare.offset()\n\r\n      // create the animate piece\n      var pieceId = uuid()\r\n      $('body').append(buildPieceHTML(piece, true, pieceId))\n      var $animatedPiece = $('#' + pieceId)\n      $animatedPiece.css({\n        display: '',\r\n        position: 'absolute',\r\n        left: srcOffset.left,\r\n        top: srcOffset.top\r\n      })\r\n\r\n      // on complete\n      function onFinishAnimation2 () {\n        // add the \"real\" piece to the destination square\n        $destSquare.find('.' + CSS.piece).remove()\n        $destSquare.append(buildPieceHTML(piece))\n\r\n        // remove the animated piece\n        $animatedPiece.remove()\n\r\n        // run complete function\n        if (isFunction(completeFn)) {\n          completeFn()\r\n        }\r\n      }\r\n\r\n      // animate the piece to the destination square\n      var opts = {\r\n        duration: config.moveSpeed,\n        complete: onFinishAnimation2\n      }\r\n      $animatedPiece.animate(destOffset, opts)\n    }\n\n    // execute an array of animations\n    function doAnimations (animations, oldPos, newPos) {\n      if (animations.length === 0) return\n\r\n      var numFinished = 0\r\n      function onFinishAnimation3 () {\n        // exit if all the animations aren't finished\n        numFinished = numFinished + 1\n        if (numFinished !== animations.length) return\n\n        drawPositionInstant()\n\r\n        // run their onMoveEnd function\n        if (isFunction(config.onMoveEnd)) {\n          config.onMoveEnd(deepCopy(oldPos), deepCopy(newPos))\n        }\r\n      }\r\n\r\n      for (var i = 0; i < animations.length; i++) {\n        var animation = animations[i]\n\n        // clear a piece\n        if (animation.type === 'clear') {\n          $('#' + squareElsIds[animation.square] + ' .' + CSS.piece)\n            .fadeOut(config.trashSpeed, onFinishAnimation3)\n\n        // add a piece with no spare pieces - fade the piece onto the square\n        } else if (animation.type === 'add' && !config.sparePieces) {\n          $('#' + squareElsIds[animation.square])\n            .append(buildPieceHTML(animation.piece, true))\n            .find('.' + CSS.piece)\n            .fadeIn(config.appearSpeed, onFinishAnimation3)\n\n        // add a piece with spare pieces - animate from the spares\n        } else if (animation.type === 'add' && config.sparePieces) {\n          animateSparePieceToSquare(animation.piece, animation.square, onFinishAnimation3)\n\n        // move a piece from squareA to squareB\n        } else if (animation.type === 'move') {\n          animateSquareToSquare(animation.source, animation.destination, animation.piece, onFinishAnimation3)\n        }\r\n      }\r\n    }\n\n    // calculate an array of animations that need to happen in order to get\n    // from pos1 to pos2\n    function calculateAnimations (pos1, pos2) {\r\n      // make copies of both\n      pos1 = deepCopy(pos1)\r\n      pos2 = deepCopy(pos2)\r\n\r\n      var animations = []\r\n      var squaresMovedTo = {}\r\n\r\n      // remove pieces that are the same in both positions\n      for (var i in pos2) {\r\n        if (!pos2.hasOwnProperty(i)) continue\r\n\r\n        if (pos1.hasOwnProperty(i) && pos1[i] === pos2[i]) {\r\n          delete pos1[i]\r\n          delete pos2[i]\r\n        }\r\n      }\r\n\r\n      // find all the \"move\" animations\n      for (i in pos2) {\n        if (!pos2.hasOwnProperty(i)) continue\r\n\r\n        var closestPiece = findClosestPiece(pos1, pos2[i], i)\r\n        if (closestPiece) {\n          animations.push({\r\n            type: 'move',\r\n            source: closestPiece,\r\n            destination: i,\r\n            piece: pos2[i]\r\n          })\r\n\r\n          delete pos1[closestPiece]\r\n          delete pos2[i]\r\n          squaresMovedTo[i] = true\r\n        }\r\n      }\n\n      // \"add\" animations\n      for (i in pos2) {\n        if (!pos2.hasOwnProperty(i)) continue\n\r\n        animations.push({\r\n          type: 'add',\r\n          square: i,\r\n          piece: pos2[i]\r\n        })\r\n\r\n        delete pos2[i]\r\n      }\r\n\n      // \"clear\" animations\n      for (i in pos1) {\n        if (!pos1.hasOwnProperty(i)) continue\n\r\n        // do not clear a piece if it is on a square that is the result\n        // of a \"move\", ie: a piece capture\n        if (squaresMovedTo.hasOwnProperty(i)) continue\n\r\n        animations.push({\r\n          type: 'clear',\r\n          square: i,\r\n          piece: pos1[i]\r\n        })\r\n\r\n        delete pos1[i]\r\n      }\r\n\r\n      return animations\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\n    // Control Flow\n    // -------------------------------------------------------------------------\n\n    function drawPositionInstant () {\r\n      // clear the board\n      $board.find('.' + CSS.piece).remove()\n\r\n      // add the pieces\n      for (var i in currentPosition) {\n        if (!currentPosition.hasOwnProperty(i)) continue\n\r\n        $('#' + squareElsIds[i]).append(buildPieceHTML(currentPosition[i]))\n      }\r\n    }\r\n\r\n    function drawBoard () {\r\n      $board.html(buildBoardHTML(currentOrientation, squareSize, config.showNotation))\n      drawPositionInstant()\r\n\r\n      if (config.sparePieces) {\n        if (currentOrientation === 'white') {\n          $sparePiecesTop.html(buildSparePiecesHTML('black'))\n          $sparePiecesBottom.html(buildSparePiecesHTML('white'))\n        } else {\r\n          $sparePiecesTop.html(buildSparePiecesHTML('white'))\n          $sparePiecesBottom.html(buildSparePiecesHTML('black'))\n        }\r\n      }\r\n    }\r\n\n    function setCurrentPosition (position) {\r\n      var oldPos = deepCopy(currentPosition)\n      var newPos = deepCopy(position)\r\n      var oldFen = objToFen(oldPos)\r\n      var newFen = objToFen(newPos)\r\n\r\n      // do nothing if no change in position\n      if (oldFen === newFen) return\r\n\r\n      // run their onChange function\n      if (isFunction(config.onChange)) {\n        config.onChange(oldPos, newPos)\n      }\r\n\r\n      // update state\n      currentPosition = position\n    }\r\n\r\n    function isXYOnSquare (x, y) {\r\n      for (var i in squareElsOffsets) {\n        if (!squareElsOffsets.hasOwnProperty(i)) continue\n\r\n        var s = squareElsOffsets[i]\n        if (x >= s.left &&\n            x < s.left + squareSize &&\n            y >= s.top &&\r\n            y < s.top + squareSize) {\n          return i\r\n        }\r\n      }\r\n\r\n      return 'offboard'\r\n    }\r\n\r\n    // records the XY coords of every square into memory\n    function captureSquareOffsets () {\r\n      squareElsOffsets = {}\n\r\n      for (var i in squareElsIds) {\n        if (!squareElsIds.hasOwnProperty(i)) continue\n\r\n        squareElsOffsets[i] = $('#' + squareElsIds[i]).offset()\n      }\r\n    }\r\n\r\n    function removeSquareHighlights () {\r\n      $board\n        .find('.' + CSS.square)\n        .removeClass(CSS.highlight1 + ' ' + CSS.highlight2)\n    }\r\n\r\n    function snapbackDraggedPiece () {\r\n      // there is no \"snapback\" for spare pieces\n      if (draggedPieceSource === 'spare') {\n        trashDraggedPiece()\r\n        return\r\n      }\r\n\r\n      removeSquareHighlights()\r\n\r\n      // animation complete\n      function complete () {\r\n        drawPositionInstant()\r\n        $draggedPiece.css('display', 'none')\n\r\n        // run their onSnapbackEnd function\n        if (isFunction(config.onSnapbackEnd)) {\n          config.onSnapbackEnd(\n            draggedPiece,\n            draggedPieceSource,\n            deepCopy(currentPosition),\n            currentOrientation\n          )\r\n        }\r\n      }\r\n\r\n      // get source square position\n      var sourceSquarePosition = $('#' + squareElsIds[draggedPieceSource]).offset()\n\r\n      // animate the piece to the target square\n      var opts = {\r\n        duration: config.snapbackSpeed,\n        complete: complete\r\n      }\r\n      $draggedPiece.animate(sourceSquarePosition, opts)\n\r\n      // set state\n      isDragging = false\n    }\r\n\r\n    function trashDraggedPiece () {\r\n      removeSquareHighlights()\r\n\r\n      // remove the source piece\n      var newPosition = deepCopy(currentPosition)\n      delete newPosition[draggedPieceSource]\n      setCurrentPosition(newPosition)\r\n\r\n      // redraw the position\n      drawPositionInstant()\r\n\r\n      // hide the dragged piece\n      $draggedPiece.fadeOut(config.trashSpeed)\n\r\n      // set state\n      isDragging = false\n    }\r\n\r\n    function dropDraggedPieceOnSquare (square) {\r\n      removeSquareHighlights()\r\n\r\n      // update position\n      var newPosition = deepCopy(currentPosition)\n      delete newPosition[draggedPieceSource]\n      newPosition[square] = draggedPiece\n      setCurrentPosition(newPosition)\r\n\r\n      // get target square information\n      var targetSquarePosition = $('#' + squareElsIds[square]).offset()\n\r\n      // animation complete\n      function onAnimationComplete () {\n        drawPositionInstant()\r\n        $draggedPiece.css('display', 'none')\n\r\n        // execute their onSnapEnd function\n        if (isFunction(config.onSnapEnd)) {\n          config.onSnapEnd(draggedPieceSource, square, draggedPiece)\n        }\r\n      }\r\n\r\n      // snap the piece to the target square\n      var opts = {\r\n        duration: config.snapSpeed,\n        complete: onAnimationComplete\n      }\r\n      $draggedPiece.animate(targetSquarePosition, opts)\n\r\n      // set state\n      isDragging = false\n    }\r\n\r\n    function beginDraggingPiece (source, piece, x, y) {\r\n      // run their custom onDragStart function\n      // their custom onDragStart function can cancel drag start\n      if (isFunction(config.onDragStart) &&\n          config.onDragStart(source, piece, deepCopy(currentPosition), currentOrientation) === false) {\n        return\r\n      }\r\n\r\n      // set state\n      isDragging = true\n      draggedPiece = piece\n      draggedPieceSource = source\n\r\n      // if the piece came from spare pieces, location is offboard\n      if (source === 'spare') {\r\n        draggedPieceLocation = 'offboard'\n      } else {\r\n        draggedPieceLocation = source\n      }\r\n\r\n      // capture the x, y coords of all squares in memory\n      captureSquareOffsets()\r\n\r\n      // create the dragged piece\n      $draggedPiece.attr('src', buildPieceImgSrc(piece)).css({\n        display: '',\r\n        position: 'absolute',\r\n        left: x - squareSize / 2,\n        top: y - squareSize / 2\n      })\r\n\r\n      if (source !== 'spare') {\r\n        // highlight the source square and hide the piece\n        $('#' + squareElsIds[source])\n          .addClass(CSS.highlight1)\n          .find('.' + CSS.piece)\n          .css('display', 'none')\n      }\r\n    }\r\n\r\n    function updateDraggedPiece (x, y) {\r\n      // put the dragged piece over the mouse cursor\n      $draggedPiece.css({\n        left: x - squareSize / 2,\n        top: y - squareSize / 2\n      })\r\n\r\n      // get location\n      var location = isXYOnSquare(x, y)\r\n\r\n      // do nothing if the location has not changed\n      if (location === draggedPieceLocation) return\n\r\n      // remove highlight from previous square\n      if (validSquare(draggedPieceLocation)) {\n        $('#' + squareElsIds[draggedPieceLocation]).removeClass(CSS.highlight2)\n      }\r\n\r\n      // add highlight to new square\n      if (validSquare(location)) {\n        $('#' + squareElsIds[location]).addClass(CSS.highlight2)\n      }\r\n\r\n      // run onDragMove\n      if (isFunction(config.onDragMove)) {\n        config.onDragMove(\n          location,\r\n          draggedPieceLocation,\n          draggedPieceSource,\n          draggedPiece,\n          deepCopy(currentPosition),\n          currentOrientation\n        )\r\n      }\r\n\r\n      // update state\n      draggedPieceLocation = location\n    }\r\n\r\n    function stopDraggedPiece (location) {\r\n      // determine what the action should be\n      var action = 'drop'\r\n      if (location === 'offboard' && config.dropOffBoard === 'snapback') {\n        action = 'snapback'\r\n      }\r\n      if (location === 'offboard' && config.dropOffBoard === 'trash') {\n        action = 'trash'\r\n      }\r\n\r\n      // run their onDrop function, which can potentially change the drop action\n      if (isFunction(config.onDrop)) {\n        var newPosition = deepCopy(currentPosition)\n\r\n        // source piece is a spare piece and position is off the board\n        // if (draggedPieceSource === 'spare' && location === 'offboard') {...}\n        // position has not changed; do nothing\n\r\n        // source piece is a spare piece and position is on the board\n        if (draggedPieceSource === 'spare' && validSquare(location)) {\n          // add the piece to the board\n          newPosition[location] = draggedPiece\n        }\r\n\r\n        // source piece was on the board and position is off the board\n        if (validSquare(draggedPieceSource) && location === 'offboard') {\n          // remove the piece from the board\n          delete newPosition[draggedPieceSource]\n        }\r\n\r\n        // source piece was on the board and position is on the board\n        if (validSquare(draggedPieceSource) && validSquare(location)) {\n          // move the piece\n          delete newPosition[draggedPieceSource]\n          newPosition[location] = draggedPiece\n        }\r\n\r\n        var oldPosition = deepCopy(currentPosition)\n\r\n        var result = config.onDrop(\n          draggedPieceSource,\n          location,\r\n          draggedPiece,\n          newPosition,\r\n          oldPosition,\r\n          currentOrientation\n        )\r\n        if (result === 'snapback' || result === 'trash') {\r\n          action = result\r\n        }\r\n      }\r\n\r\n      // do it!\n      if (action === 'snapback') {\r\n        snapbackDraggedPiece()\r\n      } else if (action === 'trash') {\r\n        trashDraggedPiece()\r\n      } else if (action === 'drop') {\r\n        dropDraggedPieceOnSquare(location)\r\n      }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\r\n    // clear the board\n    widget.clear = function (useAnimation) {\n      widget.position({}, useAnimation)\r\n    }\n\r\n    // remove the widget from the page\n    widget.destroy = function () {\n      // remove markup\n      $container.html('')\n      $draggedPiece.remove()\n\r\n      // remove event handlers\n      $container.unbind()\n    }\n\r\n    // shorthand method to get the current FEN\n    widget.fen = function () {\r\n      return widget.position('fen')\r\n    }\r\n\r\n    // flip orientation\n    widget.flip = function () {\n      return widget.orientation('flip')\r\n    }\n\n    // move pieces\n    // TODO: this method should be variadic as well as accept an array of moves\n    widget.move = function () {\r\n      // no need to throw an error here; just do nothing\n      // TODO: this should return the current position\n      if (arguments.length === 0) return\r\n\r\n      var useAnimation = true\r\n\r\n      // collect the moves into an object\n      var moves = {}\r\n      for (var i = 0; i < arguments.length; i++) {\r\n        // any \"false\" to this function means no animations\n        if (arguments[i] === false) {\r\n          useAnimation = false\r\n          continue\r\n        }\r\n\r\n        // skip invalid arguments\n        if (!validMove(arguments[i])) {\n          error(2826, 'Invalid move passed to the move method.', arguments[i])\r\n          continue\r\n        }\r\n\r\n        var tmp = arguments[i].split('-')\r\n        moves[tmp[0]] = tmp[1]\r\n      }\r\n\r\n      // calculate position from moves\n      var newPos = calculatePositionFromMoves(currentPosition, moves)\n\r\n      // update the board\n      widget.position(newPos, useAnimation)\r\n\r\n      // return the new position object\n      return newPos\r\n    }\r\n\r\n    widget.orientation = function (arg) {\r\n      // no arguments, return the current orientation\n      if (arguments.length === 0) {\r\n        return currentOrientation\n      }\r\n\r\n      // set to white or black\n      if (arg === 'white' || arg === 'black') {\r\n        currentOrientation = arg\n        drawBoard()\r\n        return currentOrientation\n      }\r\n\r\n      // flip orientation\n      if (arg === 'flip') {\r\n        currentOrientation = currentOrientation === 'white' ? 'black' : 'white'\n        drawBoard()\r\n        return currentOrientation\n      }\r\n\r\n      error(5482, 'Invalid value passed to the orientation method.', arg)\r\n    }\n\n    widget.position = function (position, useAnimation) {\n      // no arguments, return the current position\n      if (arguments.length === 0) {\r\n        return deepCopy(currentPosition)\n      }\r\n\r\n      // get position as FEN\n      if (isString(position) && position.toLowerCase() === 'fen') {\n        return objToFen(currentPosition)\n      }\n\n      // start position\n      if (isString(position) && position.toLowerCase() === 'start') {\n        position = deepCopy(START_POSITION)\r\n      }\r\n\r\n      // convert FEN to position object\n      if (validFen(position)) {\n        position = fenToObj(position)\r\n      }\r\n\r\n      // validate position object\n      if (!validPositionObject(position)) {\n        error(6482, 'Invalid value passed to the position method.', position)\r\n        return\r\n      }\r\n\n      // default for useAnimations is true\n      if (useAnimation !== false) useAnimation = true\n\n      if (useAnimation) {\n        // start the animations\n        var animations = calculateAnimations(currentPosition, position)\n        doAnimations(animations, currentPosition, position)\n\r\n        // set the new position\n        setCurrentPosition(position)\r\n      } else {\r\n        // instant update\n        setCurrentPosition(position)\r\n        drawPositionInstant()\r\n      }\r\n    }\n\n    widget.resize = function () {\n      // calulate the new square size\n      squareSize = calculateSquareSize()\n\r\n      // set board width\n      $board.css('width', squareSize * 8 + 'px')\n\r\n      // set drag piece size\n      $draggedPiece.css({\n        height: squareSize,\n        width: squareSize\n      })\r\n\r\n      // spare pieces\n      if (config.sparePieces) {\n        $container\n          .find('.' + CSS.sparePieces)\n          .css('paddingLeft', squareSize + boardBorderSize + 'px')\n      }\r\n\r\n      // redraw the board\n      drawBoard()\r\n    }\n\n    // set the starting position\n    widget.start = function (useAnimation) {\n      widget.position('start', useAnimation)\r\n    }\n\n    // -------------------------------------------------------------------------\n    // Browser Events\n    // -------------------------------------------------------------------------\n\n    function stopDefault (evt) {\n      evt.preventDefault()\n    }\r\n\r\n    function mousedownSquare (evt) {\n      // do nothing if we're not draggable\n      if (!config.draggable) return\n\n      // do nothing if there is no piece on this square\n      var square = $(this).attr('data-square')\n      if (!validSquare(square)) return\n      if (!currentPosition.hasOwnProperty(square)) return\n\n      beginDraggingPiece(square, currentPosition[square], evt.pageX, evt.pageY)\n    }\n\n    function touchstartSquare (e) {\r\n      // do nothing if we're not draggable\n      if (!config.draggable) return\n\r\n      // do nothing if there is no piece on this square\n      var square = $(this).attr('data-square')\n      if (!validSquare(square)) return\n      if (!currentPosition.hasOwnProperty(square)) return\n\r\n      e = e.originalEvent\r\n      beginDraggingPiece(\r\n        square,\r\n        currentPosition[square],\n        e.changedTouches[0].pageX,\r\n        e.changedTouches[0].pageY\r\n      )\r\n    }\r\n\r\n    function mousedownSparePiece (evt) {\n      // do nothing if sparePieces is not enabled\n      if (!config.sparePieces) return\n\r\n      var piece = $(this).attr('data-piece')\r\n\r\n      beginDraggingPiece('spare', piece, evt.pageX, evt.pageY)\n    }\r\n\r\n    function touchstartSparePiece (e) {\r\n      // do nothing if sparePieces is not enabled\n      if (!config.sparePieces) return\n\r\n      var piece = $(this).attr('data-piece')\r\n\r\n      e = e.originalEvent\r\n      beginDraggingPiece(\r\n        'spare',\r\n        piece,\r\n        e.changedTouches[0].pageX,\r\n        e.changedTouches[0].pageY\r\n      )\r\n    }\r\n\r\n    function mousemoveWindow (evt) {\n      if (isDragging) {\n        updateDraggedPiece(evt.pageX, evt.pageY)\n      }\n    }\n\n    var throttledMousemoveWindow = throttle(mousemoveWindow, config.dragThrottleRate)\n\n    function touchmoveWindow (evt) {\n      // do nothing if we are not dragging a piece\n      if (!isDragging) return\n\r\n      // prevent screen from scrolling\n      evt.preventDefault()\n\r\n      updateDraggedPiece(evt.originalEvent.changedTouches[0].pageX,\n        evt.originalEvent.changedTouches[0].pageY)\n    }\r\n\n    var throttledTouchmoveWindow = throttle(touchmoveWindow, config.dragThrottleRate)\n\n    function mouseupWindow (evt) {\n      // do nothing if we are not dragging a piece\n      if (!isDragging) return\n\r\n      // get the location\n      var location = isXYOnSquare(evt.pageX, evt.pageY)\n\r\n      stopDraggedPiece(location)\r\n    }\r\n\r\n    function touchendWindow (evt) {\n      // do nothing if we are not dragging a piece\n      if (!isDragging) return\n\r\n      // get the location\n      var location = isXYOnSquare(evt.originalEvent.changedTouches[0].pageX,\n        evt.originalEvent.changedTouches[0].pageY)\n\r\n      stopDraggedPiece(location)\r\n    }\r\n\r\n    function mouseenterSquare (evt) {\n      // do not fire this event if we are dragging a piece\n      // NOTE: this should never happen, but it's a safeguard\n      if (isDragging) return\n\n      // exit if they did not provide a onMouseoverSquare function\n      if (!isFunction(config.onMouseoverSquare)) return\n\r\n      // get the square\n      var square = $(evt.currentTarget).attr('data-square')\n\r\n      // NOTE: this should never happen; defensive\n      if (!validSquare(square)) return\n\r\n      // get the piece on this square\n      var piece = false\r\n      if (currentPosition.hasOwnProperty(square)) {\n        piece = currentPosition[square]\n      }\r\n\r\n      // execute their function\n      config.onMouseoverSquare(square, piece, deepCopy(currentPosition), currentOrientation)\n    }\r\n\r\n    function mouseleaveSquare (evt) {\n      // do not fire this event if we are dragging a piece\n      // NOTE: this should never happen, but it's a safeguard\n      if (isDragging) return\n\n      // exit if they did not provide an onMouseoutSquare function\n      if (!isFunction(config.onMouseoutSquare)) return\n\r\n      // get the square\n      var square = $(evt.currentTarget).attr('data-square')\n\r\n      // NOTE: this should never happen; defensive\n      if (!validSquare(square)) return\n\r\n      // get the piece on this square\n      var piece = false\r\n      if (currentPosition.hasOwnProperty(square)) {\n        piece = currentPosition[square]\n      }\r\n\r\n      // execute their function\n      config.onMouseoutSquare(square, piece, deepCopy(currentPosition), currentOrientation)\n    }\r\n\r\n    // -------------------------------------------------------------------------\n    // Initialization\n    // -------------------------------------------------------------------------\n\n    function addEvents () {\r\n      // prevent \"image drag\"\n      $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault)\n\n      // mouse drag pieces\n      $board.on('mousedown', '.' + CSS.square, mousedownSquare)\n      $container.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece, mousedownSparePiece)\n\r\n      // mouse enter / leave square\n      $board\n        .on('mouseenter', '.' + CSS.square, mouseenterSquare)\n        .on('mouseleave', '.' + CSS.square, mouseleaveSquare)\n\n      // piece drag\n      var $window = $(window)\n      $window\n        .on('mousemove', throttledMousemoveWindow)\n        .on('mouseup', mouseupWindow)\n\r\n      // touch drag pieces\n      if (isTouchDevice()) {\n        $board.on('touchstart', '.' + CSS.square, touchstartSquare)\n        $container.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece, touchstartSparePiece)\n        $window\n          .on('touchmove', throttledTouchmoveWindow)\n          .on('touchend', touchendWindow)\n      }\r\n    }\r\n\r\n    function initDOM () {\n      // create unique IDs for all the elements we will create\n      createElIds()\r\n\r\n      // build board and save it in memory\n      $container.html(buildContainerHTML(config.sparePieces))\n      $board = $container.find('.' + CSS.board)\n\r\n      if (config.sparePieces) {\n        $sparePiecesTop = $container.find('.' + CSS.sparePiecesTop)\n        $sparePiecesBottom = $container.find('.' + CSS.sparePiecesBottom)\n      }\r\n\r\n      // create the drag piece\n      var draggedPieceId = uuid()\r\n      $('body').append(buildPieceHTML('wP', true, draggedPieceId))\n      $draggedPiece = $('#' + draggedPieceId)\n\n      // TODO: need to remove this dragged piece element if the board is no\n      // longer in the DOM\n\n      // get the border size\n      boardBorderSize = parseInt($board.css('borderLeftWidth'), 10)\n\r\n      // set the size and draw the board\n      widget.resize()\r\n    }\r\n\n    // -------------------------------------------------------------------------\n    // Initialization\n    // -------------------------------------------------------------------------\n\n    setInitialState()\n    initDOM()\n    addEvents()\n\n    // return the widget object\n    return widget\n  } // end constructor\n\n  // TODO: do module exports here\n  window['Chessboard'] = constructor\n\n  // support legacy ChessBoard name\n  window['ChessBoard'] = window['Chessboard']\n\n  // expose util functions\r\n  window['Chessboard']['fenToObj'] = fenToObj\n  window['Chessboard']['objToFen'] = objToFen\n})() // end anonymous wrapper\r\n"]}